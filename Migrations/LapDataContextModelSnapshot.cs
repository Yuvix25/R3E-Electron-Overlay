// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReHUD.Models.LapData;

#nullable disable

namespace ReHUD.Migrations
{
    [DbContext(typeof(LapDataContext))]
    partial class LapDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("ReHUD.Models.LapData.FuelUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuelUsageContextId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PendingRemoval")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("DataId")
                        .IsUnique();

                    b.HasIndex("FuelUsageContextId");

                    b.ToTable("FuelUsages");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.FuelUsageContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuelUsageRate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("FuelUsageRate");

                    b.HasIndex("FuelUsageRate");

                    b.ToTable("FuelUsageContexts");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BestLapId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassPerformanceIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TireCompound")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackLayoutId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("TrackLayoutId", "CarId", "ClassPerformanceIndex", "TireCompound");

                    b.HasIndex("TrackLayoutId", "CarId", "ClassPerformanceIndex", "TireCompound");

                    b.ToTable("LapContexts");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LapContextId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Valid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LapContextId");

                    b.ToTable("LapDatas");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DataId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PendingRemoval")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("DataId")
                        .IsUnique();

                    b.ToTable("LapTimes");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.Telemetry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PendingRemoval")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DataId")
                        .IsUnique();

                    b.ToTable("BestLaps");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.TireWear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DataId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PendingRemoval")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TireWearContextId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DataId")
                        .IsUnique();

                    b.HasIndex("TireWearContextId");

                    b.ToTable("TireWears");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.TireWearContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TireWearRate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("TireWearRate");

                    b.HasIndex("TireWearRate");

                    b.ToTable("TireWearContexts");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.FuelUsage", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapData", "Lap")
                        .WithOne("FuelUsage")
                        .HasForeignKey("ReHUD.Models.LapData.FuelUsage", "DataId");

                    b.HasOne("ReHUD.Models.LapData.FuelUsageContext", "TypedContext")
                        .WithMany("Entries")
                        .HasForeignKey("FuelUsageContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lap");

                    b.Navigation("TypedContext");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapData", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapContext", "Context")
                        .WithMany("Entries")
                        .HasForeignKey("LapContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Context");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapTime", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapData", "Lap")
                        .WithOne("LapTime")
                        .HasForeignKey("ReHUD.Models.LapData.LapTime", "DataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lap");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.Telemetry", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapData", "Lap")
                        .WithOne("Telemetry")
                        .HasForeignKey("ReHUD.Models.LapData.Telemetry", "DataId");

                    b.OwnsOne("ReHUD.Models.LapData.TelemetryObj", "Value", b1 =>
                        {
                            b1.Property<int>("TelemetryId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("InternalPoints")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<double>("PointsPerMeter")
                                .HasColumnType("REAL");

                            b1.HasKey("TelemetryId");

                            b1.ToTable("BestLaps");

                            b1.WithOwner()
                                .HasForeignKey("TelemetryId");
                        });

                    b.Navigation("Lap");

                    b.Navigation("Value")
                        .IsRequired();
                });

            modelBuilder.Entity("ReHUD.Models.LapData.TireWear", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapData", "Lap")
                        .WithOne("TireWear")
                        .HasForeignKey("ReHUD.Models.LapData.TireWear", "DataId");

                    b.HasOne("ReHUD.Models.LapData.TireWearContext", "TypedContext")
                        .WithMany("Entries")
                        .HasForeignKey("TireWearContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReHUD.Models.LapData.TireWearObj", "Value", b1 =>
                        {
                            b1.Property<int>("TireWearId")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("FrontLeft")
                                .HasColumnType("REAL");

                            b1.Property<double>("FrontRight")
                                .HasColumnType("REAL");

                            b1.Property<double>("RearLeft")
                                .HasColumnType("REAL");

                            b1.Property<double>("RearRight")
                                .HasColumnType("REAL");

                            b1.HasKey("TireWearId");

                            b1.ToTable("TireWears");

                            b1.WithOwner()
                                .HasForeignKey("TireWearId");
                        });

                    b.Navigation("Lap");

                    b.Navigation("TypedContext");

                    b.Navigation("Value")
                        .IsRequired();
                });

            modelBuilder.Entity("ReHUD.Models.LapData.FuelUsageContext", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapContext", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapData", b =>
                {
                    b.Navigation("FuelUsage");

                    b.Navigation("LapTime")
                        .IsRequired();

                    b.Navigation("Telemetry");

                    b.Navigation("TireWear");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.TireWearContext", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
