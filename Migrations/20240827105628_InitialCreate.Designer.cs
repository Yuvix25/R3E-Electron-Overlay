// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReHUD.Models.LapData;

#nullable disable

namespace ReHUD.Migrations
{
    [DbContext(typeof(LapDataContext))]
    [Migration("20240827105628_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("ReHUD.Models.LapData.FuelUsageLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContextId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("FuelUsage")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ContextId")
                        .IsUnique();

                    b.ToTable("FuelUsageLogs");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassPerformanceIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("TrackLayoutId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Valid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp", "TrackLayoutId", "CarId", "ClassPerformanceIndex");

                    b.ToTable("LapContexts");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContextId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("FuelUsage")
                        .HasColumnType("REAL");

                    b.Property<double>("LapTime")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ContextId")
                        .IsUnique();

                    b.ToTable("LapLogs");

                    b.HasDiscriminator<string>("Discriminator").HasValue("LapLog");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ReHUD.Models.LapData.TireWearLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContextId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContextId")
                        .IsUnique();

                    b.ToTable("TireWearLogs");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapLogWithTelemetry", b =>
                {
                    b.HasBaseType("ReHUD.Models.LapData.LapLog");

                    b.HasDiscriminator().HasValue("LapLogWithTelemetry");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.FuelUsageLog", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapContext", "Context")
                        .WithOne("FuelUsageLog")
                        .HasForeignKey("ReHUD.Models.LapData.FuelUsageLog", "ContextId");

                    b.Navigation("Context");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapLog", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapContext", "Context")
                        .WithOne("LapLog")
                        .HasForeignKey("ReHUD.Models.LapData.LapLog", "ContextId");

                    b.OwnsOne("ReHUD.Models.LapData.TireWear", "TireWear", b1 =>
                        {
                            b1.Property<int>("LapLogId")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("FrontLeft")
                                .HasColumnType("REAL");

                            b1.Property<double>("FrontRight")
                                .HasColumnType("REAL");

                            b1.Property<double>("RearLeft")
                                .HasColumnType("REAL");

                            b1.Property<double>("RearRight")
                                .HasColumnType("REAL");

                            b1.HasKey("LapLogId");

                            b1.ToTable("LapLogs");

                            b1.WithOwner()
                                .HasForeignKey("LapLogId");
                        });

                    b.Navigation("Context");

                    b.Navigation("TireWear");
                });

            modelBuilder.Entity("ReHUD.Models.LapData.TireWearLog", b =>
                {
                    b.HasOne("ReHUD.Models.LapData.LapContext", "Context")
                        .WithOne("TireWearLog")
                        .HasForeignKey("ReHUD.Models.LapData.TireWearLog", "ContextId");

                    b.OwnsOne("ReHUD.Models.LapData.TireWear", "TireWear", b1 =>
                        {
                            b1.Property<int>("TireWearLogId")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("FrontLeft")
                                .HasColumnType("REAL");

                            b1.Property<double>("FrontRight")
                                .HasColumnType("REAL");

                            b1.Property<double>("RearLeft")
                                .HasColumnType("REAL");

                            b1.Property<double>("RearRight")
                                .HasColumnType("REAL");

                            b1.HasKey("TireWearLogId");

                            b1.ToTable("TireWearLogs");

                            b1.WithOwner()
                                .HasForeignKey("TireWearLogId");
                        });

                    b.Navigation("Context");

                    b.Navigation("TireWear")
                        .IsRequired();
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapLogWithTelemetry", b =>
                {
                    b.OwnsOne("ReHUD.Models.LapData.LapTelemetry", "LapTelemetry", b1 =>
                        {
                            b1.Property<int>("LapLogWithTelemetryId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("InternalLapPoints")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<double>("PointsPerMeter")
                                .HasColumnType("REAL");

                            b1.HasKey("LapLogWithTelemetryId");

                            b1.ToTable("LapLogs");

                            b1.WithOwner()
                                .HasForeignKey("LapLogWithTelemetryId");
                        });

                    b.Navigation("LapTelemetry")
                        .IsRequired();
                });

            modelBuilder.Entity("ReHUD.Models.LapData.LapContext", b =>
                {
                    b.Navigation("FuelUsageLog");

                    b.Navigation("LapLog");

                    b.Navigation("TireWearLog");
                });
#pragma warning restore 612, 618
        }
    }
}
